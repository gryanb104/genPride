configfile: "config/config.yaml"

report: "report/workflow.rst"

rule all:
	input:
		ass_rep = "workflow/report/report_final.txt"		

rule assemble_data:
	input: 
		fwd_list = config["trimmed_fastq_fwd_loc_list"],
		bwd_list = config["trimmed_fastq_bwd_loc_list"]
	output:
		slurm_ass = "results/slurm_ass.out",
		ass_contigs = "results/assembled_seqs/contigs.fasta"
			#THUS FAR ONLY WORKS FOR FIRST ITEM IN ASS_DATA
	params:
		meth = config["assembly_meth"],
		ass_thresh = config["assemble_thresh"],
		threads = config["threads"],
		spm = config["spades_py_memory"],
		spades_path = config["spades_path"]	
	shell:
		'''
		workflow/scripts/assemble_meat.sh \
		{input.fwd_list} \
		{input.bwd_list} \
		{params.meth} \
		{params.ass_thresh} \
		{params.threads} \
		{params.spm} \
		{params.spades_path} > {output.slurm_ass}
		
		'''

rule find_orfs:
	input:
		ass_contigs = "results/assembled_seqs/contigs.fasta"
	output:
		slurm_orf = "results/slurm_orf.out",
		prot_seqs = "results/protein_seqs/protein_translations.faa"
	params:
		prod_path = config["prod_path"],
		prod_meth = config["prodigal_meth"]
	shell:
		'''
		bash workflow/scripts/find_orfs.sh \
		{input.ass_contigs} \
		{params.prod_path} \
		{params.prod_meth} > {output.slurm_orf}
		
		'''
	
rule report:
	input:
		slurm_ass = "results/slurm_ass.out",
		ass_contigs = "results/assembled_seqs/contigs.fasta",
		slurm_orf = "results/slurm_orf.out"               
	output:
		ass_rep = "workflow/report/report_final.txt"
	params:
		meth = config["assembly_meth"],
		name = config["run_name"],
		fwd_list = config["trimmed_fastq_fwd_loc_list"],
                bwd_list = config["trimmed_fastq_bwd_loc_list"],
		prod_meth = config["prodigal_meth"]
	shell:
		'''
		bash workflow/scripts/assemble_report.sh \
		{params.fwd_list} \
		{params.bwd_list} \
		{params.meth} \
		{params.name} \
		{input.slurm_ass} \
		{input.ass_contigs} \
		{params.prod_meth} \
		{input.slurm_orf} > {output.ass_rep}
		
		'''
					

