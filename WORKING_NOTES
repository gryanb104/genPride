10/11/2022

*Started taking working notes
*Did an sbatch run
	-Failed after about 2.5 hours
	-Error code indicates that the reads are not the same 
	 length
*Did another sbatch run
	-This time with the files that had not been cut down t-
	o one million lines
	-Also failed, still not the same number of reads
	-Dr. Biller suggested using seqtk or seqkit packages 
	 (both installed in subdirectories under /nobackup1/
	 chisholmlab/software)
*There was a github issue
	-Struggled for a long time
	-Finally overwrote the origin (github) branch with the
	 main (local) branch
*Copied gray directory into nobackup1

*STILL NEED TO DO:
	-Make the fastq files have the same number of reads
	-Do this as another snakemake rule?
	-clone genPride git repo into nobackup1

11/2/2022

*Get fastq subsamples with equal numbers of reads
	-Reading up on seqtk
	-Can't figure out how to use it from the chisholm dire-
		ctory
	-Installing seqtk into nobackup1/billerlab
	-Run seqtk sample -s100 test_fwd_tmp.fastq.gz 1000000 >
		subset_fwd.fastq.gz and same for bwd
*Got github pushing and pulling working from nobackup1
	-Simultaneously lost the ability to do so from the home
		directory (cying emoji)
*Attempt to run genPride snakemake using these new subset files
	-Done so by running bash test_script.sh
	-Error: not a gzipped file?
*I'm going home early fuck this

11/14/2022

*Run test script (as of now, made to set up some parameters and
	run assemble_meat.sh)
	-Error: not gzip files
	-Correct by zipping files using gzip -f
*Run test script again
	-Runs, but on root node
	-Copy and paste sbatch stuff from GP_RUN
	-That ran it on the head node again
*Run again, this time using sbatch instead of bash
	-Submitted job!Did not take very long Looks like it wo-
		rked!!!
	-Deleted results files and pushed
*Try running GP_RUN 
	-Have to do so after activating the snakemake environm-
		ent
	-Have to do sbatch instead of bash also
	-Not working
	-I don't know what I did, but it is maybe working now?
		#I think I had to simplify the run script to o-
			nly snakemake --cores 1, get rid of all
			the other stuff
	-Seems to have worked!	
	-Reset and did again since the slurm output was deleted
*While that is running, fix github connection from home direct-
	ory
	-Delete home repo and clone back again
	-Presumed successful
*Next goal: try to get the slurm_ass.out to include the time in
	seconds at the end
	-Still working on this in current run

11/15/2022

*Run from yesterday: worked! The slurm_ass.out file now has ti-
	me in seconds printed at the bottom
	-Next step: get this into the report using another sna-
		kemake rule
*Getting the report to include:
	-Time in hours, minutes, seconds: DONE
	-Number of starting reads: DONE
	-Time per read: DONE
	-Number of ending contigs: DONE
	-Time per ending contig: DONE
*Push everything

11/17/2022

*Connecting snakemake 
	-Rules assemble_data and assemble_report now working t-
		ogether
	-Next: can report script be condensed?: DONE
*Prodigal script
	-Got it working using test_script, pushed to github
	-Next: trying to get it to work via snakemake: DONE
	-Add report portion into report script

11/21/2022

*run from Friday using mmseqs didn't work (mmseqs command not 
	found)
	-But running mmseqs -h from the directory did work, so
		wtf???
*slurm stuff shut down for maintenence

11/22/2022

*maintenence still happening

11/23/2022

*run still says mmseqs does not exist
	-reinstalling with conda
	-test script is working though? wtf?
	-Got it to work! Don't know how! Pushed
*working on getting the report to include cluster_gen stuff
	-error with cluster method... printed a directory inst-
		ead (fwd list)
	-did ${10} instead of $10

11/30/2022

*Install quast from conda

12/2/2022

*Learning up on quast
	-metaQUAST for metagenome assemblies
	-don't know where it is, so I will be reinstalling thr-
		ough conda
	-had to install by cloning the git repo
*Making a quasting script to run quast and print out the relev-
	ant information
	-Made the script, got it working through test_script
	-Working on getting quast to run as part of the snakem-
		ake workflow
	-Turned quast into its own rule: DONE, SEEMS TO BE WOR-
		KING
	-Next... trying to get its outputs to properly be prin-
		ted in the report_final.txt file
		#Oops, the last line of the slurm_quast.out fi-
			le is a blank line
		#Fixed then ran again	

12/06/2022

*Check run from last week: still didn't work; attempted	anothe-
	r fix to get the final line of the slurm file to not b-
	e a line break
	-Running again: taking a longass time
	-I found the issue, it was misordered inputs in	snakem-
		ake: made a fix, running again
*Pushed

12/07/2022

*Run from yesterday (fixing it so the quast time printed in the
	final report was correct: WORKED
*Pushing
*Getting the rest of the quast data to show up in the final re-
	port - start with test script
	-Total quast time: DONE
	-Number of contigs: DONE
	-Total assembly length: DONE
	-Average contig size: DONE
	-n50: DONE
	-size of file: DONE
*Getting necessary cluster data to show in the report
	-Number of clusters: DONE
*I fucked up the report-making thing... looks like I have fixed
	it though
	-Pushing it

12/9/2022

*Goal: add nucleotide capabilities to the clustering step
*First off: make rules to remove extra nonsense produced by pr-
	evious steps	

12/13/2022

*Finishing up the rm1_files.txt file full of all the files tha-
	t are not needed downstream of the assembly step: DONE
*Working on a script (RM1) that will remove all files marked w-
	ith "TRUE" in rm1_files.txt in config directory
	-Start by making it ignore empty lines: DONE
	-Make it test if the line contains TRUE after the colon
		and if it does, remove file listed at the first
		part of the line:


